import Head from 'next/head'
import styles from '@/styles/Home.module.css'
import path from 'path'
import { getPdfData, Words } from 'utils'
import { useMemo, useState } from 'react'


export async function getStaticProps() {
  const pdfPath = path.resolve(process.cwd(), 'public', 'word.pdf')
  const data = await getPdfData(pdfPath)
  return {
    props: {
      words: data
    }
  }
}

export default function Home({words}: {words: Words}) {
  const [mode,setMode] = useState<'e-c'|'c-e'>('e-c')
  const renderWords = useMemo(() => words.map(item => mode === 'c-e' ? [item[1],item[0]] : item ),[mode])
  const changeMode = () => mode === 'e-c' ? setMode('c-e') : setMode('e-c')
  console.log(renderWords)
  return (
    <>
      <Head>
        <title>Word recite</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <button onClick={changeMode}>切换顺序</button>
        {/* TODO这里key如果是item[0] 就会出现渲染问题，为什么? */}
        <ul className='wrapper'>
          {
            renderWords.map((item,idx) => <li className={styles.line} key={item[0] + item[1]}>
              <span className={styles.index}>{idx + 1}</span>
              <span className={styles.word}>{item[0]}</span>
              <span className={styles.explain}>{item[1]}</span>
            </li>)
          }
        </ul>
      </main>
    </>
  )
}
